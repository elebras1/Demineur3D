[gd_scene load_steps=8 format=3 uid="uid://bmbfbf6da02xr"]

[sub_resource type="StandardMaterial3D" id="base_material"]
albedo_color = Color(0.2, 0.2, 0.2, 1)

[sub_resource type="CylinderMesh" id="base_mesh"]
material = SubResource("base_material")
top_radius = 0.05
bottom_radius = 0.05
height = 0.02

[sub_resource type="StandardMaterial3D" id="pole_material"]
albedo_color = Color(0.2, 0.2, 0.2, 1)
metallic = 0.5
roughness = 0.3

[sub_resource type="CylinderMesh" id="pole_mesh"]
material = SubResource("pole_material")
top_radius = 0.03
bottom_radius = 0.04

[sub_resource type="Shader" id="flag_shader"]
code = "shader_type spatial;

uniform vec4 flag_color : source_color = vec4(0.9, 0.1, 0.1, 1.0);
uniform float wave_speed : hint_range(0.0, 5.0) = 6.0;
uniform float wave_amplitude : hint_range(0.0, 5) = 5;

void vertex() {
	// Animation légère pour donner vie au drapeau
	float wave = sin(VERTEX.x * 8.0 + TIME * wave_speed) * wave_amplitude;
	wave += sin(VERTEX.x * 12.0 + TIME * wave_speed * 1.4) * wave_amplitude * 0.3;
	
	// Amplitude augmente vers le bord libre
	float factor = smoothstep(0.0, 1.0, VERTEX.x);
	VERTEX.z += wave * factor;
	
	// Ajustement des normales pour l'éclairage
	NORMAL = normalize(NORMAL + vec3(0.0, 0.0, cos(VERTEX.x * 8.0 + TIME * wave_speed) * 0.2 * factor));
}

void fragment() {
	ALBEDO = flag_color.rgb;
	ROUGHNESS = 0.6;
	SPECULAR = 0.2;
	
	// Ombrage subtil basé sur les ondulations
	float shade = sin(UV.x * 8.0 + TIME * wave_speed) * 0.08 + 0.92;
	ALBEDO *= shade;
}"

[sub_resource type="ShaderMaterial" id="flag_material"]
render_priority = 0
shader = SubResource("flag_shader")
shader_parameter/flag_color = Color(0.9, 0.1, 0.1, 1)
shader_parameter/wave_speed = 3.0
shader_parameter/wave_amplitude = 0.5

[sub_resource type="PrismMesh" id="flag_mesh"]
material = SubResource("flag_material")
left_to_right = 0.0
size = Vector3(0.6, 0.5, 0.02)
subdivide_width = 15
subdivide_depth = 10

[node name="Flag" type="Node3D"]

[node name="Base" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.097354, 0)
mesh = SubResource("base_mesh")

[node name="Pole" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.682291, 0)
mesh = SubResource("pole_mesh")

[node name="FlagCloth" type="MeshInstance3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 1.40265, -0.31205)
mesh = SubResource("flag_mesh")
